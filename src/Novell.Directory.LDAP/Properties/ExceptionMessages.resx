<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TOSTRING" xml:space="preserve">
    <value>{0}: {1} ({2}) {3}</value>
  </data>
  <data name="SERVER_MSG" xml:space="preserve">
    <value>{0}: Server Message: {1}</value>
  </data>
  <data name="MATCHED_DN" xml:space="preserve">
    <value>{0}: Matched DN: {1}</value>
  </data>
  <data name="FAILED_REFERRAL" xml:space="preserve">
    <value>{0}: Failed Referral: {1}</value>
  </data>
  <data name="REFERRAL_ITEM" xml:space="preserve">
    <value>{0}: Referral: {1}</value>
  </data>
  <data name="CONNECTION_ERROR" xml:space="preserve">
    <value>Unable to connect to server {0}:{1}</value>
  </data>
  <data name="CONNECTION_IMPOSSIBLE" xml:space="preserve">
    <value>Unable to reconnect to server, application has never called connect()</value>
  </data>
  <data name="CONNECTION_WAIT" xml:space="preserve">
    <value>Connection lost waiting for results from {0}:{1}</value>
  </data>
  <data name="CONNECTION_FINALIZED" xml:space="preserve">
    <value>Connection closed by the application finalizing the object</value>
  </data>
  <data name="CONNECTION_CLOSED" xml:space="preserve">
    <value>Connection closed by the application disconnecting</value>
  </data>
  <data name="CONNECTION_READER" xml:space="preserve">
    <value>Reader thread terminated</value>
  </data>
  <data name="DUP_ERROR" xml:space="preserve">
    <value>RfcLdapMessage: Cannot duplicate message built from the input stream</value>
  </data>
  <data name="REFERENCE_ERROR" xml:space="preserve">
    <value>Error attempting to follow a search continuation reference</value>
  </data>
  <data name="REFERRAL_ERROR" xml:space="preserve">
    <value>Error attempting to follow a referral</value>
  </data>
  <data name="REFERRAL_LOCAL" xml:space="preserve">
    <value>LdapSearchResults.{0}(): No entry found &amp; request is not complete</value>
  </data>
  <data name="REFERRAL_SEND" xml:space="preserve">
    <value>Error sending request to referred server</value>
  </data>
  <data name="REFERENCE_NOFOLLOW" xml:space="preserve">
    <value>Search result reference received, and referral following is off</value>
  </data>
  <data name="REFERRAL_BIND" xml:space="preserve">
    <value>LdapBind.bind() function returned null</value>
  </data>
  <data name="REFERRAL_BIND_MATCH" xml:space="preserve">
    <value>Could not match LdapBind.bind() connection with Server Referral URL list</value>
  </data>
  <data name="NO_DUP_REQUEST" xml:space="preserve">
    <value>Cannot duplicate message to follow referral for {0} request, not allowed</value>
  </data>
  <data name="SERVER_CONNECT_ERROR" xml:space="preserve">
    <value>Error connecting to server {0} while attempting to follow a referral</value>
  </data>
  <data name="NO_SUP_PROPERTY" xml:space="preserve">
    <value>Requested property is not supported.</value>
  </data>
  <data name="ENTRY_PARAM_ERROR" xml:space="preserve">
    <value>Invalid Entry parameter</value>
  </data>
  <data name="DN_PARAM_ERROR" xml:space="preserve">
    <value>Invalid DN parameter</value>
  </data>
  <data name="RDN_PARAM_ERROR" xml:space="preserve">
    <value>Invalid DN or RDN parameter</value>
  </data>
  <data name="OP_PARAM_ERROR" xml:space="preserve">
    <value>Invalid extended operation parameter, no OID specified</value>
  </data>
  <data name="PARAM_ERROR" xml:space="preserve">
    <value>Invalid parameter</value>
  </data>
  <data name="DECODING_ERROR" xml:space="preserve">
    <value>Error Decoding responseValue</value>
  </data>
  <data name="ENCODING_ERROR" xml:space="preserve">
    <value>Encoding Error</value>
  </data>
  <data name="IO_EXCEPTION" xml:space="preserve">
    <value>I/O Exception on host {0}, port {1}</value>
  </data>
  <data name="INVALID_ESCAPE" xml:space="preserve">
    <value>Invalid value in escape sequence "{0}"</value>
  </data>
  <data name="SHORT_ESCAPE" xml:space="preserve">
    <value>Incomplete escape sequence</value>
  </data>
  <data name="UNEXPECTED_END" xml:space="preserve">
    <value>Unexpected end of filter</value>
  </data>
  <data name="MISSING_LEFT_PAREN" xml:space="preserve">
    <value>Unmatched parentheses, left parenthesis missing</value>
  </data>
  <data name="NO_OPTION" xml:space="preserve">
    <value>Semicolon present, but no option specified</value>
  </data>
  <data name="MISSING_RIGHT_PAREN" xml:space="preserve">
    <value>Unmatched parentheses, right parenthesis missing</value>
  </data>
  <data name="EXPECTING_RIGHT_PAREN" xml:space="preserve">
    <value>Expecting right parenthesis, found "{0}"</value>
  </data>
  <data name="EXPECTING_LEFT_PAREN" xml:space="preserve">
    <value>Expecting left parenthesis, found "{0}"</value>
  </data>
  <data name="NO_ATTRIBUTE_NAME" xml:space="preserve">
    <value>Missing attribute description</value>
  </data>
  <data name="NO_DN_NOR_MATCHING_RULE" xml:space="preserve">
    <value>DN and matching rule not specified</value>
  </data>
  <data name="NO_MATCHING_RULE" xml:space="preserve">
    <value>Missing matching rule</value>
  </data>
  <data name="INVALID_FILTER_COMPARISON" xml:space="preserve">
    <value>Invalid comparison operator</value>
  </data>
  <data name="INVALID_CHAR_IN_FILTER" xml:space="preserve">
    <value>The invalid character "{0}" needs to be escaped as "{1}"</value>
  </data>
  <data name="INVALID_ESC_IN_DESCR" xml:space="preserve">
    <value>Escape sequence not allowed in attribute description</value>
  </data>
  <data name="INVALID_CHAR_IN_DESCR" xml:space="preserve">
    <value>Invalid character "{0}" in attribute description</value>
  </data>
  <data name="NOT_AN_ATTRIBUTE" xml:space="preserve">
    <value>Schema element is not an LdapAttributeSchema object</value>
  </data>
  <data name="UNEQUAL_LENGTHS" xml:space="preserve">
    <value>Length of attribute Name array does not equal length of Flags array</value>
  </data>
  <data name="IMPROPER_REFERRAL" xml:space="preserve">
    <value>Referral not supported for command {0}</value>
  </data>
  <data name="NOT_IMPLEMENTED" xml:space="preserve">
    <value>Method LdapConnection.startTLS not implemented</value>
  </data>
  <data name="NO_MEMORY" xml:space="preserve">
    <value>All results could not be stored in memory, sort failed</value>
  </data>
  <data name="SERVER_SHUTDOWN_REQ" xml:space="preserve">
    <value>Received unsolicited notification from server {0}:{1} to shutdown</value>
  </data>
  <data name="INVALID_ADDRESS" xml:space="preserve">
    <value>Invalid syntax for address with port; {0}</value>
  </data>
  <data name="UNKNOWN_RESULT" xml:space="preserve">
    <value>Unknown Ldap result code {0}</value>
  </data>
  <data name="OUTSTANDING_OPERATIONS" xml:space="preserve">
    <value>Cannot start or stop TLS because outstanding Ldap operations exist on this connection</value>
  </data>
  <data name="WRONG_FACTORY" xml:space="preserve">
    <value>StartTLS cannot use the set socket factory because it does not implement LdapTLSSocketFactory</value>
  </data>
  <data name="NO_TLS_FACTORY" xml:space="preserve">
    <value>StartTLS failed because no LdapTLSSocketFactory has been set for this Connection</value>
  </data>
  <data name="NO_STARTTLS" xml:space="preserve">
    <value>An attempt to stopTLS on a connection where startTLS had not been called</value>
  </data>
  <data name="STOPTLS_ERROR" xml:space="preserve">
    <value>Error stopping TLS: Error getting input &amp; output streams from the original socket</value>
  </data>
  <data name="MULTIPLE_SCHEMA" xml:space="preserve">
    <value>Multiple schema found when reading the subschemaSubentry for {0}</value>
  </data>
  <data name="NO_SCHEMA" xml:space="preserve">
    <value>No schema found when reading the subschemaSubentry for {0}</value>
  </data>
  <data name="READ_MULTIPLE" xml:space="preserve">
    <value>Read response is ambiguous, multiple entries returned</value>
  </data>
  <data name="CANNOT_BIND" xml:space="preserve">
    <value>Cannot bind. Use PoolManager.getBoundConnection()</value>
  </data>
  <data name="SSL_PROVIDER_MISSING" xml:space="preserve">
    <value>Please ensure that SSL Provider is properly installed.</value>
  </data>
</root>